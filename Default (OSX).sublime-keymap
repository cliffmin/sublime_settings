[
//this will allow you to tab and skip braces
{ "keys": ["enter"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
    [
        { "key": "following_text", "operator": "regex_contains", "operand": "^[)}\"\\]]", "match_all": true },
        { "key": "auto_complete_visible", "operator": "equal", "operand": false }
    ]
  },
  { "keys": ["ctrl+a"], "command": "alignment" },
  { "keys": ["super+shift+f"], "command": "goto_definition" },
  { "keys": ["super+ctrl+f"], "command": "goto_symbol_in_project" },
  { "keys": ["ctrl+o"], "command": "jump_back" },
  { "keys": ["ctrl+i"], "command": "jump_forward" },
  { "keys": ["super+shift+e"], "command": "find_prev" },
  { "keys": ["super+shift+d"], "command": "find_next" },
  { "keys": ["cmd+."], "command": "next_result" },
  { "keys": ["cmd+,"], "command": "prev_result" },
  {
    "keys": ["ctrl+tab"],
    "command": "next_view"
  }, {
    "keys": ["ctrl+shift+tab"],
    "command": "prev_view"
  },

  //ctrl+e and ctrl+w for deleting foward and backword words
  {
    "keys": ["ctrl+w"],
    "command": "delete_word",
    "args": {
      "forward": false,
      "sub_words": true
    }
  }, {
    "keys": ["ctrl+e"],
    "command": "delete_word",
    "args": {
      "forward": true,
      "sub_words": true
    }
  },
  // 'ctrl+c' for esc, trying to disable it, for jk instead
  {
    "keys": "ctrl+c",
    "command": "null",
    "context": [{
      "key": "setting.command_mode",
      "operand": false
    }, {
      "key": "setting.is_widget",
      "operand": false
    }]
  },
   // Remove brackets
    {
        "keys": ["ctrl+q"],
        "command": "bh_remove_brackets"
    },
  {
    "keys": "ctrl+c",
    "command": "exit_insert_mode",
    "context": [{
      "key": "setting.command_mode",
      "operand": false
    }, {
      "key": "setting.is_widget",
      "operand": false
    }]
  }, {
    "keys": ["ctrl+c"],
    "command": "exit_visual_mode",
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "num_selections",
      "operand": 1
    }, {
      "key": "selection_empty",
      "operator": "equal",
      "operand": false,
      "match_all": false
    }]
  }, {
    "keys": "ctrl+c",
    "command": "hide_auto_complete",
    "context": [{
      "key": "auto_complete_visible",
      "operator": "equal",
      "operand": true
    }]
  },

  {
    "keys": "ctrl+c",
    "command": "vi_cancel_current_action",
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "selection_empty",
      "operator": "equal",
      "operand": true,
      "match_all": false
    }, {
      "key": "vi_has_input_state"
    }]
  },
  // uses htmlprettify
  {
    "keys": ["super+l"],
    "command": "htmlprettify"
  },

  //js_format
  // {
  //   "keys": ["super+l"],
  //   "command": "js_format"
  // },

  //vi like ctrl+d, ctrl+u scrolling
  {
    "keys": [
      "ctrl+u"
    ],
    "command": "vi_scroll_lines",
    "args": {
      "forward": false,
    },
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "setting.vintage_ctrl_keys"
    }]
  }, {
    "keys": [
      "ctrl+d"
    ],
    "command": "vi_scroll_lines",
    "args": {
      "forward": true,
    },
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "setting.vintage_ctrl_keys"
    }]
  },

  // multi cursor with super+k, super+j
  {
    "keys": [
      "super+k"
    ],
    "command": "select_lines",
    "args": {
      "forward": false
    },
    "context": [{
      "key": "setting.command_mode",
      "operand": true
    }, {
      "key": "setting.is_widget",
      "operand": false
    }]
  }, {
    "keys": [
      "super+j"
    ],
    "command": "select_lines",
    "args": {
      "forward": true
    },
    "context": [{
      "key": "setting.command_mode",
      "operand": true
    }, {
      "key": "setting.is_widget",
      "operand": false
    }]
  },

  // ' j,k' for es
  {
    "keys": ["i","i"],
    "command": "exit_insert_mode",
    "context": [{
      "key": "setting.command_mode",
      "operand": false
    }, {
      "key": "setting.is_widget",
      "operand": false
    }]
  }, {
    "keys": ["i","i"],
    "command": "exit_visual_mode",
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "num_selections",
      "operand": 1
    }, {
      "key": "selection_empty",
      "operator": "equal",
      "operand": false,
      "match_all": false
    }]
  }, {
    "keys": ["i","i"],
    "command": "hide_auto_complete",
    "context": [{
      "key": "auto_complete_visible",
      "operator": "equal",
      "operand": true
    }]
  }, {
    "keys": ["i","i"],
    "command": "vi_cancel_current_action",
    "context": [{
      "key": "setting.command_mode"
    }, {
      "key": "selection_empty",
      "operator": "equal",
      "operand": true,
      "match_all": false
    }, {
      "key": "vi_has_input_state"
    }]
  }, {
    "keys": ["i","i"],
    "command": "exit_auto_complete_and_insert_mode",
    "context": [{
      "key": "auto_complete_visible",
      "operator": "equal",
      "operand": true
    }]
  },
  // 'H' goes to beginning of line, 'L' goes to end.
  {
    "keys": ["H"],
    "command": "set_motion",
    "args": {
      "motion": "vi_move_to_first_non_white_space_character",
      "motion_args": {
        "extend": true
      },
      "clip_to_line": true
    },
    "context": [{
      "key": "setting.command_mode"
    }]
  }, {
    "keys": ["L"],
    "command": "set_motion",
    "args": {
      "motion": "vi_move_to_hard_eol",
      "motion_args": {
        "repeat": 1,
        "extend": true
      },
      "inclusive": true,
      "clip_to_line": true
    },
    "context": [{
      "key": "setting.command_mode"
    }]
  },
  //code folding
  {
    "keys": ["super+equals"],
    "command": "unfold"
  }, {
    "keys": ["super+plus"],
    "command": "unfold"
  }, {
    "keys": ["super+minus"],
    "command": "fold"
  },
  //go back and forth in history
  {
    "keys": ["ctrl+o"],
    "command": "jump_back"
  }, {
    "keys": ["ctrl+i"],
    "command": "jump_forward"
  },
  //swap lines
  {
    "keys": ["alt+k"],
    "command": "swap_line_up"
  }, {
    "keys": ["alt+j"],
    "command": "swap_line_down"
  },

  //uses plugin to cancel out auto complete and insertion mode
  {
    "keys": ["ctrl+c"],
    "command": "exit_auto_complete_and_insert_mode",
    "context": [{
      "key": "auto_complete_visible",
      "operator": "equal",
      "operand": true
    }]
  },

  // bracket matching
   {
    "keys": ["ctrl+m"],
    "command": "move_to",
    "args": {
      "to": "brackets"
    }
  }, {
    "keys": ["super+m"],
    "command": "expand_selection",
    "args": {
      "to": "tag"
    }
  },

  // Ctrl + hjkl for focusing splits.
  {
    "keys": ["ctrl+h"],
    "command": "move_group_focus",
    "args": {
      "direction": "left"
    },
    "context": [{
      "key": "setting.vintage_ctrl_keys"
    }, {
      "key": "setting.command_mode"
    }]
  }, {
    "keys": ["ctrl+j"],
    "command": "move_group_focus",
    "args": {
      "direction": "down"
    },
    "context": [{
      "key": "setting.vintage_ctrl_keys"
    }, {
      "key": "setting.command_mode"
    }]
  }, {
    "keys": ["ctrl+k"],
    "command": "move_group_focus",
    "args": {
      "direction": "up"
    },

    "context": [{
      "key": "setting.vintage_ctrl_keys"
    }, {
      "key": "setting.command_mode"
    }]
  }, {
    "keys": ["ctrl+l"],
    "command": "move_group_focus",
    "args": {
      "direction": "right"
    },
    "context": [{
      "key": "setting.vintage_ctrl_keys"
    }, {
      "key": "setting.command_mode"
    }]
  }, {
    "keys": ["shift+q"],
    "command": "nextBuildError"
  }, {
    "keys": ["ctrl+shift+q"],
    "command": "prevBuidError"
  }, {
    "keys": ["ctrl+,"],
    "command": "move_to_neighboring_group",
    "args": {
      "forward": false
    }
  }, {
    "keys": ["ctrl+."],
    "command": "move_to_neighboring_group"
  }
]